_G.Credits = {
  "Created by Code002Lover",
  ["Discord"] = "8ytFhuj"
}
local marketplaceService = game:GetService("MarketplaceService")
local lp = game.Players.LocalPlayer
function getname(id)
  return marketplaceService:GetProductInfo(id, Enum.InfoType.Asset).Name
end
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Mystikfluu/uilib/master/uilib.lua"))()
local window = library:CreateWindow(getname(game.PlaceId))
local Capsules = window:CreateFolder("Capsules")
local Furniture = window:CreateFolder("Furniture")
local Store = window:CreateFolder("Store")

local StoreModel

for i,v in pairs(game.Workspace.StoreModels:GetChildren()) do
  if(v.Owner.Value == lp.Name) then
    StoreModel = v
  end
end
if(StoreModel == nil) then
  error("No Store Found!")
end

local cost = 50
local money = 0
local open = 0
local Capsuleslist = {}
local FurnitureList = {
  "Maze Game",
  "Prize Claw",
  "Ball Claw",
  "Sword Fighter",
  "Table Game",
  "Boxer Game",
  "Wack A Noob",
  "Air Hockey",
  "King Hammer",
  "4 Player Air Hockey",
  "Dance!",
  "Basketball Game",
  "Dogfighter",
  "Jackpot Wheel",
  "Motorbike Madness",
  "Spin 2 Win",
  "Ball Roll",
}
for i, v in pairs(game.Workspace:GetChildren()) do
  if(string.find(v.Name, "Capsule")) then
    local cost = v.BuyCapsulePart.EggsSurfaceGui.Frame.Amount.Text
    cost = string.gsub(cost,"K","000")
    if(cost) then
      Capsuleslist[tonumber(cost)] = v.Name .. "($"..cost..")"
    end
  end
end


Capsules:Dropdown("Capsules", Capsuleslist, true, function(value)
  _G.Capsule = string.split(value, "(")[1]
  cost = tonumber(string.split(string.split(value, "($")[2], ")")[1])
end)
Capsules:Toggle("Open Capsule", function(toggle)
  _G.OpenCapsule = toggle
  spawn(function()
    while wait() and _G.OpenCapsule do
    money = lp.leaderstats.Money.Value
    open = math.floor(money / cost)
    if(open > 2) then
      open = 3
    else
      open = 1
    end
    local args = {
      [1] = _G.Capsule or "Noob Capsule",
      [2] = open
    }
    game:GetService("ReplicatedStorage").Events.OpenCapsule:InvokeServer(unpack(args))
  end
end)
end)
Furniture:Toggle("Auto Upgrade", function(toggle)
_G.AU = toggle
spawn(function()
  while wait(0.1) and _G.AU do
  for i, v in pairs(FurnitureList) do
    print(v)
    local args = {
      [1] = v or "Maze Game",
      [2] = "Max"
    }
    game:GetService("ReplicatedStorage").Events.ResearchFurniture:FireServer(unpack(args))
    local args = {
      [1] = "Golden "..v or "Golden Maze Game",
      [2] = "Max"
    }
    game:GetService("ReplicatedStorage").Events.ResearchFurniture:FireServer(unpack(args))

  end
end
end)
end)
Furniture:Dropdown("Furniture", FurnitureList, true, function(value)
_G.Selected = value
end)
Furniture:Toggle("Auto Buy 1", function(toggle)
_G.AB = toggle
spawn(function()
while wait() and _G.AB do
if(_G.Selected) then
  local args = {
    [1] = _G.Selected,
    [2] = 1
  }
  game:GetService("ReplicatedStorage").Events.BuyFurniture:FireServer(unpack(args))
end
end
end)
end)


Store:Toggle("Auto Collect",function(toggle)
  _G.ACS = toggle
  spawn(function()
    while _G.ACS and wait() do
  for i,v in pairs(StoreModel.Furniture:GetChildren()) do
    if(v.CoinStorage.Value ~= 0) then
    lp.Character.HumanoidRootPart.CFrame = v.Model.PrimaryPart.CFrame
  local args = {
      [1] = v,
      [2] = "Collect"
  }

  game:GetService("ReplicatedStorage").Events.FurnitureInteract:FireServer(unpack(args))
  lp.Character.HumanoidRootPart.CFrame = v.Model.PrimaryPart.CFrame
  wait()
  game:GetService("ReplicatedStorage").Events.FurnitureInteract:FireServer(unpack(args))
end
end
end
end)
end)
