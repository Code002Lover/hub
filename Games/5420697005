_G.click = true
_G.togglerebirth = true
_G.rebirths = 10


if(_G.toggle == nil) then _G.toggle = false end
_G.toggle = not _G.toggle
while wait() and _G.toggle do
  if(_G.click) then
    game:GetService("ReplicatedStorage").Remotes.Click:InvokeServer()
    game:GetService("ReplicatedStorage").Remotes.LevelUp:InvokeServer()
    game:GetService("ReplicatedStorage").Remotes.LevelUp:InvokeServer()
    game:GetService("ReplicatedStorage").Remotes.LevelUp:InvokeServer()
    game:GetService("ReplicatedStorage").Remotes.LevelUp:InvokeServer()
    game:GetService("ReplicatedStorage").Remotes.LevelUp:InvokeServer()
    game:GetService("ReplicatedStorage").Remotes.LevelUp:InvokeServer()
  end
  for i, v in pairs(game:GetService("Players").LocalPlayer.data.pets:GetChildren()) do
    wait()
    local args = {
      [1] = v[v.Name]
    }
    game:GetService("ReplicatedStorage").Remotes.EquipPet:InvokeServer(unpack(args))
    if(_G.togglerebirth) then
      local args = {
        [1] = _G.rebirths
      }
      game:GetService("ReplicatedStorage").Remotes.BuyRebirths:InvokeServer(unpack(args))
    end
  end
end
